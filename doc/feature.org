* vim binding keys
** j,k,h,l: move down,up,left,right
=h= and =l= are meaningful in ~tree view~ and ~thumbnail view~ 
** / : open quick search box
** gg,G: move top, bottom
** v : visual mode (prepare for selection)
if followed by a movement, then items between cursor and move target will be selected.
the selection is stop by the first non-movement key.
** yy,dd: copy,delete
** Y: copy file path to clip board
** u,ctrl+r: go back/forward
note =ctrl+r= overrides TC's default mapping (refresh)
** r: rename
** a: new file
** bindings for TC specific features
*** switch view type
ot: tree view
oo: thumbnail view
    - "oo" looks like two square ^_^
    - thumbnail view is commonly use
    - and press oo again it will switch to the default full view again
of: full view
ob: brief view
oc: comments view
o1, o2, o3... : the nth custom view
*** tab management
*** context menu: m
*** sn,st,se,ss: sort (by name,time,extension,size)
there is no default vim key binding about sort. and ~:sort~ is not convenient.
*** splits
**** w1..w9: split 11/100, 22/100, ... 100/100
**** w0: split 0/100
**** wj,wk,wh,wl: move splitter left,right,up,down by 1/10 client area
**** w{SPACE}: enlarge source window to 80%
**** wm: open splitter context menu
**** wr: toggle between horizontal mode and vertical mode
* ecm commands
** ecm_sendkey

* compare with other related tools
** TWinKey
support many other functions. but it doesn't support key sequence like =gg=
** viatc 
viatc installs system levle keyboard hook, while tckeyex only install keyboard hook
on TC main thread. honestly global keyboard hook may not affect the system
performance too much, but someone do like clean solution.
viatc key bindings are not customizalbe. it won't make big trouble to programmers
though -- they can modify its source.
* TODO
** vim key in lister
** M: open folder context menu
   approach: find the path panel and send WM_RBUTTONUP

